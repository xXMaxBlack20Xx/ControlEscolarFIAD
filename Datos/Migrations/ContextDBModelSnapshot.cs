// <auto-generated />
using System;
using Datos.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Modelos.E_Prueba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Pruebas");
                });

            modelBuilder.Entity("Entidades.Modelos.PlanesDeEstudio.Carreras.E_Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrera"));

                    b.Property<string>("AliasCarrera")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClaveCarrera")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<bool>("EstadoCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int");

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCarrera");

                    b.HasIndex("AliasCarrera")
                        .IsUnique()
                        .HasDatabaseName("UK_Carreras_Alias");

                    b.HasIndex("ClaveCarrera")
                        .IsUnique()
                        .HasDatabaseName("UK_Carreras_Clave");

                    b.HasIndex("NombreCarrera")
                        .IsUnique()
                        .HasDatabaseName("UK_Carreras_Nombre");

                    b.ToTable("Carreras", "CEF");
                });

            modelBuilder.Entity("Entidades.Modelos.PlanesDeEstudio.Carreras.E_PlanEstudio", b =>
                {
                    b.Property<int>("IdPlanEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlanEstudio"));

                    b.Property<string>("CampoOcupacional")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("CreditosObligatorios")
                        .HasColumnType("int");

                    b.Property<int>("CreditosOptativos")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoPlanEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int");

                    b.Property<int>("IdNivelAcademico")
                        .HasColumnType("int");

                    b.Property<string>("PerfilDeEgreso")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PerfilDeIngreso")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PlanEstudio")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nchar(6)")
                        .IsFixedLength();

                    b.Property<int>("TotalCreditos")
                        .HasColumnType("int");

                    b.HasKey("IdPlanEstudio");

                    b.HasIndex("IdCarrera", "PlanEstudio")
                        .IsUnique()
                        .HasDatabaseName("UK_PlanesEstudio_IdCarrera_Plan");

                    b.ToTable("PlanesEstudio", "CEF");
                });

            modelBuilder.Entity("Entidades.Modelos.PlanesDeEstudio.Carreras.E_PlanEstudio", b =>
                {
                    b.HasOne("Entidades.Modelos.PlanesDeEstudio.Carreras.E_Carrera", "Carrera")
                        .WithMany("PlanEstudios")
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Entidades.Modelos.PlanesDeEstudio.Carreras.E_Carrera", b =>
                {
                    b.Navigation("PlanEstudios");
                });
#pragma warning restore 612, 618
        }
    }
}
